services:

  # -------- PostgreSQL --------
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pipeline_net

  # -------- MinIO --------
  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - pipeline_net

  # -------- NiFi --------
  nifi:
    image: apache/nifi:1.26.0
    container_name: nifi
    environment:
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_WEB_HTTP_HOST: 0.0.0.0
      NIFI_JARS_DIR: /opt/nifi/nifi-custom-lib 
    ports:
      - "8080:8080"
    volumes:
      - /c/Users/Public/data/input:/opt/nifi/input
      - /c/Users/Public/nifi-drivers:/opt/nifi/nifi-custom-lib   

    networks:
      - pipeline_net

  # -------- Kafka --------
  kafka:
    image: bitnami/kafka:3.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - pipeline_net


  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - SPARK_SUBMIT_OPTIONS=--conf spark.jars.ivy=/home/sparkuser/.ivy
    ports:
      - "8081:8080"  # UI master
      - "7077:7077"  # Port master pour les workers
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ../ivy:/home/sparkuser/.ivy

    networks:
      - pipeline_net

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8082:8081"  # UI worker 1
    networks:
      - pipeline_net

  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8083:8081"  # UI worker 2
    networks:
      - pipeline_net

  # -------- Airflow --------
  airflow:
    image: apache/airflow:2.8.3
    container_name: airflow
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__FERNET_KEY: "Y6JZngIfTbGuvaUPbJdBktb13HKGvNedFwRJ3fDbzPI="
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin123@postgres:5432/mydb
    depends_on:
      - postgres
    ports:
      - "8084:8080"
    volumes:
      - airflow_logs:/opt/airflow/logs
    command: ["webserver"]
    networks:
      - pipeline_net
  airflow-scheduler:
    image: apache/airflow:2.8.3
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__FERNET_KEY: "Y6JZngIfTbGuvaUPbJdBktb13HKGvNedFwRJ3fDbzPI="
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:admin123@postgres:5432/mydb
    volumes:
      - airflow_logs:/opt/airflow/logs
    command: scheduler
    networks:
      - pipeline_net

  # -------- Superset --------
  superset:
    image: apache/superset:latest
    container_name: superset
    environment:
      SUPERSET_ENV: development
      SUPERSET_LOAD_EXAMPLES: "yes"
      SUPERSET_SECRET_KEY: "secret_key_1234"
      DATABASE_URL: postgresql+psycopg2://admin:admin123@postgres:5432/mydb
    depends_on:
      - postgres
    ports:
      - "8085:8088"
    volumes:
      - superset_data:/app/superset_home
    networks:
      - pipeline_net

# -------- Volumes --------
volumes:
  postgres_data:
  minio_data:
  nifi_data:
  airflow_logs:
  superset_data:
  spark_ivy:

# -------- Network --------
networks:
  pipeline_net:
    driver: bridge
